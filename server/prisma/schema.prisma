generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String?
  email           String           @unique
  password        String
  role            String
  phone           String?
  reviews         Review[]
  displacedGroups DisplacedGroup[]
}

model City {
  id     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name   String
  houses House[]
}

model Coordinate {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  latitude  Float
  longitude Float
  houses    House[]
}

model House {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  adress       String
  numPlaces    Int
  details      String?
  cityId       String     @db.Uuid
  coordinateId String     @db.Uuid
  reviews      Review[]
  city         City       @relation(fields: [cityId], references: [id], onDelete: Cascade)
  coordinate   Coordinate @relation(fields: [coordinateId], references: [id], onDelete: Cascade)
}

model Review {
  id      String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId  String  @db.Uuid
  text    String?
  rate    Int?
  houseId String  @db.Uuid
  house   House   @relation(fields: [houseId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DisplacedGroup {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status       String
  userId       String        @db.Uuid
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  privileges   Privilege[]
  groupMembers GroupMember[]
}

model GroupMember {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String
  surname          String
  middleName       String
  age              Int
  displacedGroupId String         @db.Uuid
  displacedGroup   DisplacedGroup @relation(fields: [displacedGroupId], references: [id], onDelete: Cascade)
}

model Privilege {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  displacedGroups DisplacedGroup[]
}
